* {
	box-sizing: border-box;
	-moz-box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: border-box;
}

.header {
  padding: 10px 16px;
  background: #000;
  color: White;
	text-align: center;
}

.new{
	display: inline;
}
.textButton {
	margin: 0;
  padding: 0;
  overflow: hidden;
	align-items: center;
	text-decoration: none;
	color: White;
	cursor: pointer;
	list-style-type: none;
}

.textButton li{
	font-size: 90%;
	box-shadow: 0 4px 5px rgba(75, 75, 75, 0.2);
	border: 1px solid White;
	outline-color: White;
	align-self: center;
	display: inline-block;
	text-align: center;
}

.textButton input[type="color"]{
	background-color: transparent;
	border: none;
	outline: none;
}

.textButton li:hover {
	transition: all 0.3s linear 0s;
	background-color: Blue;
}

.content {
  padding: 16px;
}

.sticky {
  position: fixed;
  top: 0;
  width: 100%;
}

.sticky + .content {
  padding-top: 60px;
}

html, body {
	margin: 0;
	padding: 0;
	font-family: sans-serif;
	font-size: 12pt;
	background-color: #eee;
}

.page {
	margin-top: 60px;
	width: 21cm;
	min-height: 29.7cm;
	padding-left: 2cm;
	padding-top: 2cm;
	padding-right: 2cm;
	padding-bottom: 2cm;
	margin: 1cm auto;
	background: #fff;
	box-shadow: 0 4px 5px rgba(75, 75, 75, 0.2);
	outline: 0;
}

@media (max-width: 45em) {
  .page {
		width: 80%;
		min-height: 70.4em;
		padding-left: 1cm;
		padding-top: 1cm;
		padding-right: 1cm;
		padding-bottom: 1cm;
	}
}

@page {
	size: A4 portrait;
	margin-left: 2cm;
	margin-top: 2cm;
	margin-right: 2cm;
	margin-bottom: 2cm;
	orphans: 4;
	widows: 2;
}

p {
	margin: 0;
}

p + p {
	margin-top: 0.5cm;
}

@media print {
	html, body {
		background-color: #fff;
	}
	.header, footer{
		display: none;
	}
	.page {
		/* Reset all page styles that have been for better screen appearance only */
		/* Break cascading by using the !important rule */
		/* These resets are absolute must-haves for the print styles and the specificity may be higher elsewhere */
		width: initial !important;
		min-height: initial !important;
		margin: 0 !important;
		padding: 0 !important;
		border: initial !important;
		border-radius: initial !important;
		background: initial !important;
		box-shadow: initial !important;

		/* Force page breaks after each .page element of the document */
		page-break-after: always;
	}
}

h1 { font-size: 175%; }
h2 { font-size: 150%; }
h3 { font-size: 100%; }

h1, h2, h3 {
	page-break-after: avoid;
  color: White;
}

nav {
	align-items: center;
  margin-top: 10px;
  padding: 0;
  overflow: hidden;
 	color: White;
  background: rgba(0, 0, 96, 0);
}

footer {
	height: 10%;
	text-align: center;
	padding: 1em;
	background: #000;
}

title {
  display: none;
}

main{
	margin: 1em 0em 0em 0em;
	background: Grey;
}

article {
	text-align: left;
	margin: 1em 0em 0em 0em;
	height: 75%;
}

article:target {
	background-color: Blue;
}

section {
	text-align: center;
	align-content: center;
	padding: 1em;
	margin: 1em 0em 0em 0em
}

footer a {
	font-style: italic;
	color: White;
}

footer a:hover {
	background-color: Grey;
}

@media (max-width: 45em) {
  nav {
    margin: 0.25em;
  	padding: 0.25em;
  	display: block;
  }

	section {
		height: 100%;
	}

	main:after {
		background: #5050D0;
		content: "";
	  display: block;
	  clear: both;
	}
}

/* Remove default bullets */

[contenteditable]:focus {
    outline: 0px solid transparent;
}

[contentEditable=true]:empty:not(:focus):before{
    content:attr(data-text)
}


/* Remove default bullets */
ul, .tree {
  list-style-type: none;
}

/* Remove margins and padding from the parent ul */
.tree {
  margin: 0;
  padding: 0;
}

/* Style the caret/arrow */
.caret {
  cursor: pointer;
  user-select: none; /* Prevent text selection */
}

/* Create the caret/arrow with a unicode, and style it */
.caret::before {
  content: "+";
  color: black;
  display: inline-block;
  margin-right: 6px;
}

/* Rotate the caret/arrow icon when clicked on (using JavaScript) */
.caret-down::before {
  content: "-";
}

/* Hide the nested list */
.nested {
  display: none;
}

/* Show the nested list when the user clicks on the caret/arrow (with JavaScript) */
.active {
  display: block;
}
